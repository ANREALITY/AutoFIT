<?php
$form->setAttributes([
    'action',
    $this->url('create-order')
])
    ->prepare();
echo $this->form()->openTag($form);
?>

<?php
$fileTransferRequestFieldset = $form->get('file_transfer_request');
$userFieldset = $fileTransferRequestFieldset->get('user');
$environmentFieldset = $fileTransferRequestFieldset->get('environment');
$logicalConnectionFieldset = $fileTransferRequestFieldset->get('logical_connection');
$serviceInvoicePositionBasicFieldset = $fileTransferRequestFieldset->get('service_invoice_position_basic');
$serviceInvoicePositionPersonalFieldset = $fileTransferRequestFieldset->get('service_invoice_position_personal');
$physicalConnectionsCollection = $logicalConnectionFieldset->get('physical_connections');
$endpointSourceFieldset = $physicalConnectionsCollection->getFieldsets()[0]->get('endpoint_source');
$endpointTargetFieldset = $physicalConnectionsCollection->getFieldsets()[0]->get('endpoint_target');
$applicationForSourceFieldset = $endpointSourceFieldset->get('application');
$customerForSourceFieldset = $endpointSourceFieldset->get('customer');
$serverForSourceFieldset = $endpointSourceFieldset->get('server');
$applicationForTargetFieldset = $endpointTargetFieldset->get('application');
$customerForTargetFieldset = $endpointTargetFieldset->get('customer');
$serverForTargetFieldset = $endpointTargetFieldset->get('server');
?>

<?php
// billing
echo $this->partial('/partials/fieldgroups/billing',
    [
        'fileTransferRequestFieldset' => $fileTransferRequestFieldset,
        'userFieldset' => $userFieldset,
        'environmentFieldset' => $environmentFieldset,
        'serviceInvoicePositionBasicFieldset' => $serviceInvoicePositionBasicFieldset,
        'serviceInvoicePositionPersonalFieldset' => $serviceInvoicePositionPersonalFieldset,
    ]);
?>

<?php
// endpoint source (basic settings)
echo $this->partial('/partials/fieldgroups/endpoints/basic-source',
    [
        'endpointSourceFieldset' => $endpointSourceFieldset,
        'applicationForSourceFieldset' => $applicationForSourceFieldset,
        'customerForSourceFieldset' => $customerForSourceFieldset,
        'serverForSourceFieldset' => $serverForSourceFieldset,
    ]);
?>

<?php
// endpoint target (basic settings)
echo $this->partial('/partials/fieldgroups/endpoints/basic-target',
    [
        'endpointTargetFieldset' => $endpointTargetFieldset,
        'applicationForTargetFieldset' => $applicationForTargetFieldset,
        'customerForTargetFieldset' => $customerForTargetFieldset,
        'serverForTargetFieldset' => $serverForTargetFieldset,
    ]);
?>

<div class="clearer"></div>

<?php
// endpoint source (specific settings)
echo $this->partial('/partials/fieldgroups/endpoints/' . $connectionType . '/' . $endpointSourceType . '-source',
    [
        'endpointSourceFieldset' => $endpointSourceFieldset,
    ]);
?>

<?php
// endpoint target (specific settings)
echo $this->partial('/partials/fieldgroups/endpoints/' . $connectionType . '/' . $endpointTargetType . '-target',
    [
        'endpointTargetFieldset' => $endpointTargetFieldset,
    ]);
?>

<div class="clearer"></div>

<?php
// physical connections
if ($connectionType == 'cd') {
    echo $this->partial('/partials/fieldgroups/connections/' . $connectionType,
        [
            'physicalConnectionFieldset' => $physicalConnectionsCollection->getFieldsets()[0],
        ]);
} elseif ($connectionType == 'ftgw') {
    echo $this->partial('/partials/fieldgroups/connections/' . $connectionType,
        [
            'physicalConnectionFieldset' => $physicalConnectionsCollection->getFieldsets()[0],
        ]);
    echo $this->partial('/partials/fieldgroups/connections/' . $connectionType,
        [
            'physicalConnectionFieldset' => $physicalConnectionsCollection->getFieldsets()[1],
        ]);
}
?>

<div class="clearer"></div>

<div class="form-group">
    <div class="controls"><?php echo $this->formElement($form->get('submit')); ?></div>
</div>

<?php
echo $this->form()->closeTag();
?>
