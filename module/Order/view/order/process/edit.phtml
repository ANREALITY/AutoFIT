<?php
use DbSystel\DataObject\LogicalConnection;
use DbSystel\DataObject\FileTransferRequest;
?>

<?php
$connectionTypes = [
    'cd' => 'CD',
    'ftgw' => 'FTGW'
];
?>
<?php

$endpointTypes = [
    'cdlinuxunix' => 'Linux/Unix',
    'cdtandem' => 'Tandem',
    'cdas400' => 'AS400',
    'cdwindows' => 'Windows',
    'cdwindowsshare' => 'Windows Share',
    'cdzos' => 'ZOS'
];
?>
<?php
$connectionTypeLabel = $connectionTypes[strtolower($connectionType)];
$endpointSourceTypeLabel = $endpointTypes[strtolower($endpointSourceType)];
$endpointTargetTypeLabel = $endpointTypes[strtolower($endpointTargetType)];
?>

<?php
// $this->translate('%s order for a connection from %s to %s')
$header = sprintf(
    'Bestellung einer %s-Verbindung von %s zu %s',
    $connectionTypeLabel, $endpointSourceTypeLabel, $endpointTargetTypeLabel);
?>
<h3>
	<span><?php echo $header; ?></span>
</h3>

<?php
$formClass = strcasecmp($connectionType, LogicalConnection::TYPE_CD) === 0 ? 'cd' : 'ftgw';
$form->setAttribute('class', $formClass)->prepare();
echo $this->form()->openTag($form);
?>

<?php
// validation errors
echo $this->partial('/partials/validation-errors',
    [
        'form' => $form,
    ]);
?>

<?php
$fileTransferRequestFieldset = $form->get('file_transfer_request');
$userFieldset = $fileTransferRequestFieldset->get('user');
$environmentFieldset = $fileTransferRequestFieldset->get('environment');
$logicalConnectionFieldset = $fileTransferRequestFieldset->get('logical_connection');
$serviceInvoicePositionBasicFieldset = $fileTransferRequestFieldset->get('service_invoice_position_basic');
$serviceInvoicePositionPersonalFieldset = $fileTransferRequestFieldset->get('service_invoice_position_personal');
if (strcasecmp($connectionType, LogicalConnection::TYPE_CD) === 0) {
    $physicalConnectionEndToEndFieldset = $logicalConnectionFieldset->get('physical_connection_end_to_end');
    $endpointSourceFieldset = $physicalConnectionEndToEndFieldset->get('endpoint_source');
    $endpointTargetFieldset = $physicalConnectionEndToEndFieldset->get('endpoint_target');
} elseif (strcasecmp($connectionType, LogicalConnection::TYPE_FTGW) === 0) {
    $physicalConnectionEndToMiddleFieldset = $logicalConnectionFieldset->get('physical_connection_end_to_middle');
    $endpointSourceFieldset = $physicalConnectionEndToMiddleFieldset->get('endpoint_source');
    $physicalConnectionMiddleToEndFieldset = $logicalConnectionFieldset->get('physical_connection_middle_to_end');
    $endpointTargetFieldset = $physicalConnectionMiddleToEndFieldset->get('endpoint_target');
}
$applicationForSourceFieldset = $endpointSourceFieldset->get('application');
$customerForSourceFieldset = $endpointSourceFieldset->get('customer');
$endpointServerConfigForSourceFieldset = $endpointSourceFieldset->get('endpoint_server_config');
$externalServerForSourceFieldset = $endpointSourceFieldset->get('external_server');
$applicationForTargetFieldset = $endpointTargetFieldset->get('application');
$customerForTargetFieldset = $endpointTargetFieldset->get('customer');
$endpointServerConfigForTargetFieldset = $endpointTargetFieldset->get('endpoint_server_config');
$externalServerForTargetFieldset = $endpointTargetFieldset->get('external_server');
?>

<?php
/**
 * @var FileTransferRequest $fileTransferRequest
 */
?>
<?php
if (! empty($getHelperFieldsValuesFromObject)) {
    $serviceInvoice = $fileTransferRequest->getServiceInvoicePositionBasic()->getServiceInvoice();
    $applicationTechnicalShortName = $serviceInvoice->getApplication()->getTechnicalShortName();
    $fileTransferRequestFieldset->get('application_technical_short_name')->setValue($applicationTechnicalShortName);
    $environmentSeverity = $serviceInvoice->getEnvironment()->getSeverity();
    $environmentFieldset->get('severity')->setValue($environmentSeverity);
    $environmentName = $serviceInvoice->getEnvironment()->getName();
    $environmentFieldset->get('name')->setValue($environmentName);
}
?>

<?php
// billing
echo $this->partial('/partials/fieldgroups/billing',
    [
        // Fieldsets
        'fileTransferRequestFieldset' => $fileTransferRequestFieldset,
        'userFieldset' => $userFieldset,
        'environmentFieldset' => $environmentFieldset,
        'serviceInvoicePositionBasicFieldset' => $serviceInvoicePositionBasicFieldset,
        'serviceInvoicePositionPersonalFieldset' => $serviceInvoicePositionPersonalFieldset,
        'action' => 'edit'
        // DataObjects
        // no DataObjects
        // misc values
        // no misc values
    ]);
?>

<?php
// endpoint source (basic settings)
echo $this->partial('/partials/fieldgroups/endpoints/basic-source',
    [
        // Fieldsets
        'endpointSourceFieldset' => $endpointSourceFieldset,
        'applicationForSourceFieldset' => $applicationForSourceFieldset,
        'customerForSourceFieldset' => $customerForSourceFieldset,
        'endpointServerConfigForSourceFieldset' => $endpointServerConfigForSourceFieldset,
        'externalServerForSourceFieldset' => $externalServerForSourceFieldset,
        // DataObjects
        // no DataObjects
        // misc values
        // no misc values
    ]);
?>

<?php
// endpoint target (basic settings)
echo $this->partial('/partials/fieldgroups/endpoints/basic-target',
    [
        // Fieldsets
        'endpointTargetFieldset' => $endpointTargetFieldset,
        'applicationForTargetFieldset' => $applicationForTargetFieldset,
        'customerForTargetFieldset' => $customerForTargetFieldset,
        'endpointServerConfigForTargetFieldset' => $endpointServerConfigForTargetFieldset,
        'externalServerForTargetFieldset' => $externalServerForTargetFieldset,
        // DataObjects
        // no DataObjects
        // misc values
        // no misc values
    ]);
?>

<div class="clearer"></div>

<?php
// endpoint source (specific settings)
echo $this->partial('/partials/fieldgroups/endpoints/' . $connectionType . '/' . $endpointSourceType . '-source',
    [
        // Fieldsets
        'endpointSourceFieldset' => $endpointSourceFieldset,
        // DataObjects
        // no DataObjects
        // misc values
        'getHelperFieldsValuesFromObject' => $getHelperFieldsValuesFromObject,
    ]);
?>

<?php
// endpoint target (specific settings)
echo $this->partial('/partials/fieldgroups/endpoints/' . $connectionType . '/' . $endpointTargetType . '-target',
    [
        // Fieldsets
        'endpointTargetFieldset' => $endpointTargetFieldset,
        // DataObjects
        // no DataObjects
        // misc values
        'getHelperFieldsValuesFromObject' => $getHelperFieldsValuesFromObject,
    ]);
?>

<div class="clearer"></div>

<?php
// logical connection
echo $this->partial('/partials/fieldgroups/logical-connection',
    [
        // Fieldsets
        'logicalConnectionFieldset' => $logicalConnectionFieldset,
        // DataObjects
        // no DataObjects
        // misc values
        // no misc values
    ]);
?>

<div class="clearer"></div>

<?php
// physical connections
if (strcasecmp($connectionType, LogicalConnection::TYPE_CD) === 0) {
    echo $this->partial('/partials/fieldgroups/connections/' . $connectionType,
        [
            // Fieldsets
            'physicalConnectionEndToEndFieldset' => $physicalConnectionEndToEndFieldset,
            // DataObjects
            // no DataObjects
            // misc values
            // no misc values
        ]);
} elseif (strcasecmp($connectionType, LogicalConnection::TYPE_FTGW) === 0) {
    echo $this->partial('/partials/fieldgroups/connections/' . $connectionType,
        [
            // Fieldsets
            'physicalConnectionEndToMiddleFieldset' => $physicalConnectionEndToMiddleFieldset,
            'physicalConnectionMiddleToEndFieldset' => $physicalConnectionMiddleToEndFieldset,
            // DataObjects
            // no DataObjects
            // misc values
            'endpointSourceType' => $endpointSourceType,
            'endpointTargetType' => $endpointTargetType,
        ]);
}
?>

<div class="clearer"></div>

<?php
// comment
echo $this->partial('/partials/fieldgroups/comment',
    [
        // Fieldsets
        'fileTransferRequestFieldset' => $fileTransferRequestFieldset,
        'userFieldset' => $userFieldset,
        'environmentFieldset' => $environmentFieldset,
        'serviceInvoicePositionBasicFieldset' => $serviceInvoicePositionBasicFieldset,
        'serviceInvoicePositionPersonalFieldset' => $serviceInvoicePositionPersonalFieldset
        // misc values
        // no misc values
    ]);
?>

<div class="clearer"></div>

<div class="hint-mandatory col-md-12"><?php echo sprintf($this->translate('The fields marked with %s are mandatory.'), '<span class="mandatory-' . strtolower($connectionType) . '">*</span>'); ?></div>

<div class="clearer"></div>

<div class="form-group">
    <div class="controls"><?php echo $this->formElement($form->get('save')); ?>
    <?php echo $this->formElement($form->get('submit')); ?></div>
</div>

<?php
echo $this->form()->closeTag();
?>
