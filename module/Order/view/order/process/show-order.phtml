<?php
use DbSystel\DataObject\FileTransferRequest;
use DbSystel\DataObject\LogicalConnection;
/**
 *
 * @var FileTransferRequest $fileTransferRequest
 */
$fileTransferRequest;
?>

<!-- show order <?php echo $fileTransferRequest->getId(); ?> -->

<?php
// info
echo $this->partial('/partials/order-parts/order-info', [
    'fileTransferRequest' => $fileTransferRequest
]);
?>

<?php
// billing
echo $this->partial('/partials/order-parts/billing', [
    'fileTransferRequest' => $fileTransferRequest
]);
?>

<?php
// endpoint source (basic settings)
$endpointSource = $fileTransferRequest->getLogicalConnection()->getType() == LogicalConnection::TYPE_CD
    ? $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionEndToEnd()->getEndpointSource()
    : $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionEndToMiddle()->getEndpointSource()
;
echo $this->partial('/partials/order-parts/endpoints/basic-source',
[
    'dataObject' => $endpointSource
]);
?>

<?php
// endpoint target (basic settings)
$endpointTarget = $fileTransferRequest->getLogicalConnection()->getType() == LogicalConnection::TYPE_CD
    ? $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionEndToEnd()->getEndpointTarget()
    : $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionMiddleToEnd()->getEndpointTarget()
;
echo $this->partial('/partials/order-parts/endpoints/basic-target',
[
    'dataObject' => $endpointSource
]);
?>

<div class="clearer"></div>

<?php
// endpoint source (specific settings)
$connectionType = strtolower($fileTransferRequest->getLogicalConnection()->getType());
$endpointSourceType = strtolower($endpointSource->getType());
echo $this->partial('/partials/order-parts/endpoints/' . $connectionType . '/' . $endpointSourceType . '-source',
[
    'dataObject' => $endpointSource,
]);
?>

<?php
// // endpoint target (specific settings)
$connectionType = strtolower($fileTransferRequest->getLogicalConnection()->getType());
$endpointTargetType = strtolower($endpointTarget->getType());
echo $this->partial('/partials/order-parts/endpoints/' . $connectionType . '/' . $endpointTargetType . '-target',
    [
        'dataObject' => $endpointTarget,
    ]);
?>

<div class="clearer"></div>

<?php
// logical connection
$logicalConnection = $fileTransferRequest->getLogicalConnection();
echo $this->partial('/partials/order-parts/logical-connection',
[
    'dataObject' => $logicalConnection,
]);
?>

<div class="clearer"></div>

<?php
// physical connections
$connectionType = strtolower($fileTransferRequest->getLogicalConnection()->getType());
// CD
if ($fileTransferRequest->getLogicalConnection()->getType() == LogicalConnection::TYPE_CD) {
    $dataObjectPhysicalConnectionFtgwEndToEnd = $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionEndToEnd();
}
// FTGW (no settings for now)
elseif ($fileTransferRequest->getLogicalConnection()->getType() == LogicalConnection::TYPE_FTGW) {
    $physicalConnectionEndToMiddle = $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionEndToMiddle();
    $physicalConnectionMiddleToEnd = $fileTransferRequest->getLogicalConnection()->getPhysicalConnectionMiddleToEnd();
}
// CD
if ($fileTransferRequest->getLogicalConnection()->getType() == LogicalConnection::TYPE_CD) {
    echo $this->partial('/partials/order-parts/connections/' . $connectionType,
    [
        'dataObject' => $dataObjectPhysicalConnectionFtgwEndToEnd
    ]);
}
// FTGW (no settings for now)
elseif (strcasecmp($connectionType, LogicalConnection::TYPE_FTGW) === 0) {
    echo $this->partial('/partials/order-parts/connections/' . $connectionType, [
        'physicalConnectionEndToMiddle' => $physicalConnectionEndToMiddle,
        'physicalConnectionMiddleToEnd' => $physicalConnectionMiddleToEnd
    ]);
}
?>
